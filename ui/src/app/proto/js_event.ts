// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "js_event.proto" (package "wow.web.proto", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message wow.web.proto.Wrapper
 */
export interface Wrapper {
    /**
     * @generated from protobuf field: wow.web.proto.JsEvent event = 1
     */
    event?: JsEvent;
}
/**
 * @generated from protobuf message wow.web.proto.JsEvent
 */
export interface JsEvent {
    /**
     * @generated from protobuf oneof: event
     */
    event: {
        oneofKind: "initializeRequest";
        /**
         * @generated from protobuf field: wow.web.proto.InitializeRequest initialize_request = 1
         */
        initializeRequest: InitializeRequest;
    } | {
        oneofKind: "browseFolderRequest";
        /**
         * @generated from protobuf field: wow.web.proto.BrowseFolderRequest browse_folder_request = 10
         */
        browseFolderRequest: BrowseFolderRequest;
    } | {
        oneofKind: "browseFolderResponse";
        /**
         * @generated from protobuf field: wow.web.proto.BrowseFolderResponse browse_folder_response = 20
         */
        browseFolderResponse: BrowseFolderResponse;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message wow.web.proto.InitializeRequest
 */
export interface InitializeRequest {
}
/**
 * @generated from protobuf message wow.web.proto.BrowseFolderRequest
 */
export interface BrowseFolderRequest {
    /**
     * @generated from protobuf field: string title = 1
     */
    title: string;
    /**
     * @generated from protobuf field: string default_path = 2
     */
    defaultPath: string;
    /**
     * @generated from protobuf field: repeated string filters = 3
     */
    filters: string[];
    /**
     * @generated from protobuf field: bool allow_create = 4
     */
    allowCreate: boolean;
}
/**
 * @generated from protobuf message wow.web.proto.BrowseFolderResponse
 */
export interface BrowseFolderResponse {
    /**
     * @generated from protobuf field: bool canceled = 1
     */
    canceled: boolean;
    /**
     * @generated from protobuf field: string path = 2
     */
    path: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class Wrapper$Type extends MessageType<Wrapper> {
    constructor() {
        super("wow.web.proto.Wrapper", [
            { no: 1, name: "event", kind: "message", T: () => JsEvent }
        ]);
    }
    create(value?: PartialMessage<Wrapper>): Wrapper {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<Wrapper>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Wrapper): Wrapper {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* wow.web.proto.JsEvent event */ 1:
                    message.event = JsEvent.internalBinaryRead(reader, reader.uint32(), options, message.event);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Wrapper, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* wow.web.proto.JsEvent event = 1; */
        if (message.event)
            JsEvent.internalBinaryWrite(message.event, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message wow.web.proto.Wrapper
 */
export const Wrapper = new Wrapper$Type();
// @generated message type with reflection information, may provide speed optimized methods
class JsEvent$Type extends MessageType<JsEvent> {
    constructor() {
        super("wow.web.proto.JsEvent", [
            { no: 1, name: "initialize_request", kind: "message", oneof: "event", T: () => InitializeRequest },
            { no: 10, name: "browse_folder_request", kind: "message", oneof: "event", T: () => BrowseFolderRequest },
            { no: 20, name: "browse_folder_response", kind: "message", oneof: "event", T: () => BrowseFolderResponse }
        ]);
    }
    create(value?: PartialMessage<JsEvent>): JsEvent {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.event = { oneofKind: undefined };
        if (value !== undefined)
            reflectionMergePartial<JsEvent>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: JsEvent): JsEvent {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* wow.web.proto.InitializeRequest initialize_request */ 1:
                    message.event = {
                        oneofKind: "initializeRequest",
                        initializeRequest: InitializeRequest.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).initializeRequest)
                    };
                    break;
                case /* wow.web.proto.BrowseFolderRequest browse_folder_request */ 10:
                    message.event = {
                        oneofKind: "browseFolderRequest",
                        browseFolderRequest: BrowseFolderRequest.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).browseFolderRequest)
                    };
                    break;
                case /* wow.web.proto.BrowseFolderResponse browse_folder_response */ 20:
                    message.event = {
                        oneofKind: "browseFolderResponse",
                        browseFolderResponse: BrowseFolderResponse.internalBinaryRead(reader, reader.uint32(), options, (message.event as any).browseFolderResponse)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: JsEvent, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* wow.web.proto.InitializeRequest initialize_request = 1; */
        if (message.event.oneofKind === "initializeRequest")
            InitializeRequest.internalBinaryWrite(message.event.initializeRequest, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* wow.web.proto.BrowseFolderRequest browse_folder_request = 10; */
        if (message.event.oneofKind === "browseFolderRequest")
            BrowseFolderRequest.internalBinaryWrite(message.event.browseFolderRequest, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* wow.web.proto.BrowseFolderResponse browse_folder_response = 20; */
        if (message.event.oneofKind === "browseFolderResponse")
            BrowseFolderResponse.internalBinaryWrite(message.event.browseFolderResponse, writer.tag(20, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message wow.web.proto.JsEvent
 */
export const JsEvent = new JsEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InitializeRequest$Type extends MessageType<InitializeRequest> {
    constructor() {
        super("wow.web.proto.InitializeRequest", []);
    }
    create(value?: PartialMessage<InitializeRequest>): InitializeRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<InitializeRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InitializeRequest): InitializeRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: InitializeRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message wow.web.proto.InitializeRequest
 */
export const InitializeRequest = new InitializeRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BrowseFolderRequest$Type extends MessageType<BrowseFolderRequest> {
    constructor() {
        super("wow.web.proto.BrowseFolderRequest", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "default_path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "filters", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "allow_create", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<BrowseFolderRequest>): BrowseFolderRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.title = "";
        message.defaultPath = "";
        message.filters = [];
        message.allowCreate = false;
        if (value !== undefined)
            reflectionMergePartial<BrowseFolderRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BrowseFolderRequest): BrowseFolderRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string default_path */ 2:
                    message.defaultPath = reader.string();
                    break;
                case /* repeated string filters */ 3:
                    message.filters.push(reader.string());
                    break;
                case /* bool allow_create */ 4:
                    message.allowCreate = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BrowseFolderRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string default_path = 2; */
        if (message.defaultPath !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.defaultPath);
        /* repeated string filters = 3; */
        for (let i = 0; i < message.filters.length; i++)
            writer.tag(3, WireType.LengthDelimited).string(message.filters[i]);
        /* bool allow_create = 4; */
        if (message.allowCreate !== false)
            writer.tag(4, WireType.Varint).bool(message.allowCreate);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message wow.web.proto.BrowseFolderRequest
 */
export const BrowseFolderRequest = new BrowseFolderRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BrowseFolderResponse$Type extends MessageType<BrowseFolderResponse> {
    constructor() {
        super("wow.web.proto.BrowseFolderResponse", [
            { no: 1, name: "canceled", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "path", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<BrowseFolderResponse>): BrowseFolderResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.canceled = false;
        message.path = "";
        if (value !== undefined)
            reflectionMergePartial<BrowseFolderResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BrowseFolderResponse): BrowseFolderResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool canceled */ 1:
                    message.canceled = reader.bool();
                    break;
                case /* string path */ 2:
                    message.path = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BrowseFolderResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool canceled = 1; */
        if (message.canceled !== false)
            writer.tag(1, WireType.Varint).bool(message.canceled);
        /* string path = 2; */
        if (message.path !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.path);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message wow.web.proto.BrowseFolderResponse
 */
export const BrowseFolderResponse = new BrowseFolderResponse$Type();
